import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
// import { useSession, signIn, signOut } from "next-auth/react";
import Button from "../components/common/button";
import Avatar from "../components/common/avatar";
import Input from "../components/common/input";
import { useEffect, useState } from "react";
import { supabase } from "../utils/supabaseClient";

const Home: NextPage = () => {
  // const { data: session } = useSession();

  const [session, setSession] = useState(false);
  const [list, setList] = useState([]);

  async function fetchMyAPI() {
    const { data, error } = await supabase.from("todos").select();
    console.log("fetch data", data, error);
    setList(data);
  }

  useEffect(() => {
    const currentSession = supabase.auth.session();
    setSession(currentSession);
  });

  useEffect(() => {
    fetchMyAPI();
  }, [session]);

  const [text, setText] = useState("");

  async function signInWithGoogle() {
    const { user, session, error } = await supabase.auth.signIn({
      provider: "google",
    });
    fetchMyAPI()
  }

  async function signOutWithGoogle() {
    const { error } = await supabase.auth.signOut();

    setSession(false)
  }

  async function deleteItem(item) {
   

    try {
      const { data, error } = await supabase
      .from("todos")
      .delete()
      .match({ id: item?.id });

      setList(list.filter(listItem => listItem?.id !== item?.id))

    } catch (e) {
      console.log('delete error', e)
    }
  } 

  async function addItem(item) {

    const userData = session?.user
    try {
      const { data, error } = await supabase
      .from("todos")
      .insert([{ task: item, user_id: userData?.id, is_complete: false  }]);

      setList([...list, ...data])

      console.log('add success' , data)
    } catch (e) {
      console.log('add error' , e)
    }

  } 

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="text-3xl">Welcome</h1>
        <div>
          {session ? (
            <>
              Signed in as {session?.user?.email} <br />
              {/* <Avatar src={session?.user?.image} alt="user-img" /> */}
              {/* <Button onClick={() => signOut()}>Sign out</Button> */}
              <Button onClick={() => signOutWithGoogle()}>Sign out</Button>
            </>
          ) : (
            <>
              Not signed in <br />
              <Button onClick={() => signInWithGoogle()}>Sign in</Button>
            </>
          )}
        </div>

        <div>
          {session ? (
            <div>
              <Input
                placeholder="add list"
                value={text}
                onChange={(e) => {
                  setText(e.target.value);
                }}
                onKeyUp={(e) => {
                  if (e.keyCode === 13) {
                    // console.log("value", e.target.value);
                    addItem( e.target.value)
                  }
                }}
              />

              <div>
                {list.map((item) => (
                  <div className="flex" key={item?.id}>
                    <span>{item?.task}</span>
                    <div className="ml-2 cursor-pointer" onClick={() => deleteItem(item)}>X</div>
                  </div>
                ))}
              </div>
            </div>
          ) : (
            <p>Log in to see this</p>
          )}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by <span className={styles.logo}></span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
