import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import Button from "../components/common/button";
import Input from "../components/common/input";
import { KeyboardEvent, useEffect, useState } from "react";
import { addData, deleteData, fetchData, getCurrentUserSession, signInWithOauth, signOut } from "../utils/supabaseCrudHelpers";
import { SingleListData } from "../types/apiTypes";
import { Session, UserIdentity } from "@supabase/supabase-js";


const Home: NextPage = () => {

  const [session, setSession] = useState<Session>();
  const [list, setList] = useState<SingleListData[]>([]);
  const [text, setText] = useState("");

  async function fetchListDataAndAddToState() {
    const { data, error } = await fetchData()
    setList(data)
  }

  useEffect(() => {
    const currentSession = getCurrentUserSession();
    setSession(currentSession);
  }, []);

  useEffect(() => {
    fetchListDataAndAddToState();
  }, [session]);

  const deleteItem = async (item: SingleListData) => {
    try {
      await deleteData(item)

      setList(list?.filter(listItem => listItem?.id !== item?.id))

    } catch (e) {
      console.log('delete error', e)
    }
  }

  const addItem = async (item: string) => {
    const userData = session?.user as unknown as UserIdentity
    try {
      const { data } = await addData(userData, item)

      setList([...list, ...data])

      console.log('add success' , data)
    } catch (e) {
      console.log('add error' , e)
    }
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="text-3xl">Welcome</h1>
        <div>
          {session ? (
            <>
              Signed in as {session?.user?.email} <br />
              {/* <Avatar src={session?.user?.image} alt="user-img" /> */}
              {/* <Button onClick={() => signOut()}>Sign out</Button> */}
              <Button
                onClick={() => {
                  signOut();
                  setSession(undefined);
                }}
              >
                Sign out
              </Button>
            </>
          ) : (
            <>
              Not signed in <br />
              <Button onClick={() => {
                signInWithOauth()
                fetchListDataAndAddToState()
              }}>Sign in</Button>
            </>
          )}
        </div>

        <div>
          {session ? (
            <div>
              <Input
                placeholder="add list"
                value={text}
                onChange={(e) => {
                  setText(e.target.value);
                }}
                onKeyUp={(e: KeyboardEvent<HTMLInputElement>) => {
                  console.log(text, "text", typeof e.target)
                  if (e.keyCode === 13) {
                    addItem(text);
                  }
                }}
              />

              <div>
                {list?.map((item) => (
                  <div className="flex" key={item?.id}>
                    <span>{item?.task}</span>
                    <div
                      className="ml-2 cursor-pointer"
                      onClick={() => deleteItem(item)}
                    >
                      X
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ) : (
            <p>Log in to see this</p>
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;
