import type { NextPage } from 'next';
import { useEffect, useState } from 'react';
import {
  fetchData,
  getCurrentUserSession,
  signInWithOauth,
  signOut,
} from '../utils/supabaseCrudHelpers';
import { SingleListData } from '../types/apiTypes';
import { Session } from '@supabase/supabase-js';
import Header from '../components/header';

const Home: NextPage = () => {
  const [session, setSession] = useState<Session>();
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const [list, setList] = useState<SingleListData[]>([]);
  // const [text, setText] = useState('');

  async function fetchListDataAndAddToState() {
    const { data } = await fetchData();
    setList(data);
  }

  useEffect(() => {
    const currentSession = getCurrentUserSession();
    setSession(currentSession);
  }, []);

  useEffect(() => {
    fetchListDataAndAddToState();
  }, [session]);

  // return (
  //   <div className={styles.container}>
  //     <Head>
  //       <title>Create Next App</title>
  //       <meta name="description" content="Generated by create next app" />
  //       <link rel="icon" href="/favicon.ico" />
  //     </Head>

  //     <main className={styles.main}>
  //       <h1 className="text-3xl">Welcome</h1>
  //       <div>
  //         {session ? (
  //           <>
  //             Signed in as {session?.user?.email} <br />
  //             {/* <Avatar src={session?.user?.image} alt="user-img" /> */}
  //             {/* <Button onClick={() => signOut()}>Sign out</Button> */}
  //             <Button
  //               onClick={() => {
  //                 signOut();
  //                 setSession(undefined);
  //               }}
  //             >
  //               Sign out
  //             </Button>
  //           </>
  //         ) : (
  //           <>
  //             Not signed in <br />
  //             <Button onClick={() => {
  //               signInWithOauth()
  //               fetchListDataAndAddToState()
  //             }}>Sign in</Button>
  //           </>
  //         )}
  //       </div>

  //       <div>
  //         {session ? (
  //           <div>
  //             <Input
  //               placeholder="add list"
  //               value={text}
  //               onChange={(e) => {
  //                 setText(e.target.value);
  //               }}
  //               onKeyUp={(e: KeyboardEvent<HTMLInputElement>) => {
  //                 console.log(text, "text", typeof e.target)
  //                 if (e.keyCode === 13) {
  //                   addItem(text);
  //                 }
  //               }}
  //             />

  //             <div>
  //               {list?.map((item) => (
  //                 <div className="flex" key={item?.id}>
  //                   <span>{item?.task}</span>
  //                   <div
  //                     className="ml-2 cursor-pointer"
  //                     onClick={() => deleteItem(item)}
  //                   >
  //                     X
  //                   </div>
  //                 </div>
  //               ))}
  //             </div>
  //           </div>
  //         ) : (
  //           <p>Log in to see this</p>
  //         )}
  //       </div>
  //     </main>
  //   </div>
  // );

  return (
    <>
      <Header
        userImg={session?.user?.user_metadata?.avatar_url}
        onSignOutClick={() => {
          signOut();
          setSession(undefined);
        }}
        onSigninClick={() => {
          signInWithOauth();
          fetchListDataAndAddToState();
        }}
      />
    </>
  );
};

export default Home;
